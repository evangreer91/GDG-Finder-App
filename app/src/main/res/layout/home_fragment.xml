<?xml version="1.0" encoding="utf-8"?>
<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto">

<!-- add the viewModel variable-->
    <data>
        <variable
            name="viewModel"
            type="com.example.android.gdgfinder.home.HomeViewModel" />
    </data>

<!-- add coordinator layout to allow us to stack our views-->
<!-- this will allow our floating action button to float above the scroll view-->
    <androidx.coordinatorlayout.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <!--Replace scroll view with a nested scroll view to work with coordinator layout-->
        <androidx.core.widget.NestedScrollView
            android:layout_height="match_parent"
            android:layout_width="match_parent">

            <androidx.constraintlayout.widget.ConstraintLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingBottom="16dp"
                android:clipToPadding="true"
                tools:context=".home.HomeFragment">

                <ImageView
                    android:id="@+id/image"
                    android:layout_width="0dp"
                    android:layout_height="0dp"
                    app:srcCompat="@drawable/behind"
                    android:scaleType="centerCrop"
                    app:layout_constraintTop_toTopOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintDimensionRatio="4:3"/>

                <!-- text size is set using scalable pixels -->
                <!-- the pixels will scale based on the default text size the user configured on their phone -->
                <!-- you should never use sp for layouts like margin or padding-->

                <!--    apply the appropriate styles to the title and subtitle-->
                <!--    get rid of the redundant attributes-->
                <TextView
                    android:id="@+id/title"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="16dp"
                    android:fontFamily="monospace"
                    android:text="@string/about_google_developer_groups"
                    style="@style/TextAppearance.Title"
                    app:layout_constraintEnd_toStartOf="@+id/end_grid"
                    app:layout_constraintStart_toStartOf="@+id/start_grid"
                    app:layout_constraintTop_toBottomOf="@id/image" />

                <TextView
                    android:id="@+id/intro_text"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    app:layout_constraintTop_toBottomOf="@id/title"
                    app:layout_constraintStart_toStartOf="@+id/start_grid"
                    app:layout_constraintEnd_toStartOf="@+id/end_grid"
                    android:text="@string/gdg_description_long"
                    android:layout_marginTop="8dp"/>

                <TextView
                    android:id="@+id/subtitle"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="13dp"
                    android:fontFamily="sans-serif"
                    android:text="@string/gdgs_are"
                    style="@style/TextAppearance.Subtitle"
                    android:textColor="#555555"
                    android:textSize="18sp"
                    app:layout_constraintEnd_toStartOf="@id/end_grid"
                    app:layout_constraintStart_toEndOf="@id/start_grid"
                    app:layout_constraintTop_toBottomOf="@+id/intro_text" />

                <TextView
                    android:id="@+id/description"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:text="@string/gdg_description_bullets"
                    android:layout_marginTop="8dp"
                    app:layout_constraintTop_toBottomOf="@id/subtitle"
                    app:layout_constraintStart_toStartOf="@+id/start_grid"
                    app:layout_constraintEnd_toStartOf="@+id/end_grid"/>

                <ImageView
                    android:id="@+id/end_image"
                    android:layout_width="0dp"
                    android:layout_height="0dp"
                    android:scaleType="centerCrop"
                    android:layout_marginTop="16dp"
                    app:srcCompat="@drawable/wtm"
                    app:layout_constraintTop_toBottomOf="@id/description"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintDimensionRatio="3:1.5"
                    app:layout_constraintBottom_toBottomOf="parent"/>

                <androidx.constraintlayout.widget.Guideline
                    android:id="@+id/start_grid"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    app:layout_constraintGuide_begin="16dp"
                    android:orientation="vertical"/>

                <androidx.constraintlayout.widget.Guideline
                    android:id="@+id/end_grid"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:orientation="vertical"
                    app:layout_constraintGuide_end="16dp"/>
            </androidx.constraintlayout.widget.ConstraintLayout>
        </androidx.core.widget.NestedScrollView>

<!--    add the floating action button here-->
<!--    set the layout gravity appropriately to the end and bottom-->
<!--    add onClick listener to execute view model's onFabClicked-->
        <com.google.android.material.floatingactionbutton.FloatingActionButton
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="end|bottom"
            android:layout_margin="16dp"
            android:onClick="@{() -> viewModel.onFabClicked()}"
            app:srcCompat="@drawable/ic_gdg" />

    </androidx.coordinatorlayout.widget.CoordinatorLayout>
</layout>